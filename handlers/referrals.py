from aiogram import Router
import asyncio
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from database import get_user_referral_link  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
from database import get_referral_count, get_user_earnings  # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
from config import CURRENCY  # –û–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã
from messages import *  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è

referral_router = Router()

# –ö–Ω–æ–ø–∫–∞ "–î–ª—è –¥—Ä—É–∑–µ–π"
@referral_router.message(lambda message: message.text == "–î–ª—è –¥—Ä—É–∑–µ–π")
async def friends_menu(message: Message):
    buttons = [
        [KeyboardButton(text="–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")],
        [KeyboardButton(text="–ò–Ω—Ñ–æ –æ —Ä–µ—Ñ. —Å–µ—Ç–∏")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@referral_router.message(lambda message: message.text == "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞")
async def handle_referral_link_button(message: Message):
    user_id = message.from_user.id
    user_language = message.from_user.language_code  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É
    referral_link = await get_user_referral_link(user_id)

    if referral_link:
        if user_language == 'en':
            await message.answer(referral_link_message_en.format(referral_link=referral_link))
        else:
            await message.answer(referral_link_message_ru.format(referral_link=referral_link))
    else:
        if user_language == 'en':
            await message.answer(referral_link_error_en)
        else:
            await message.answer(referral_link_error_ru)

@referral_router.message(lambda message: message.text == "–ò–Ω—Ñ–æ –æ —Ä–µ—Ñ. —Å–µ—Ç–∏")
async def referral_network_info(message: Message):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    referral_count = await get_referral_count(user_id)

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º run_in_executor –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    loop = asyncio.get_event_loop()
    earnings = await loop.run_in_executor(None, get_user_earnings, user_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    info_text = (
        "ü§ù –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å –±–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n\n"
        "üìå –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n"
        "1Ô∏è‚É£ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏.\n"
        "2Ô∏è‚É£ –ö–æ–≥–¥–∞ –≤–∞—à –¥—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.\n"
        "3Ô∏è‚É£ –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π ‚Äî —Ç–µ–º –±–æ–ª—å—à–µ –±–æ–Ω—É—Å–æ–≤!\n\n"
        "üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"üë• –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {referral_count}\n"
        f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤: {earnings} {CURRENCY}\n\n"
        "–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –¥—Ä—É–∑—å—è–º –æ RaJah.WS –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –Ω–∞–≥—Ä–∞–¥!"
    )

    await message.answer(info_text)

