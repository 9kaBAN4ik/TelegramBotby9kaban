from aiogram import Router, types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.filters.state import StateFilter
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from database import get_visible_partners, add_partner
router = Router()

class PartnerStates(StatesGroup):
    waiting_partner_info = State()


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
@router.message(lambda message: message.text == "–ò–Ω—Ñ–æ")
async def info_main_menu(message: Message):
    buttons = [
        [KeyboardButton(text="–û –Ω–∞—Å")],
        [KeyboardButton(text="–ü—Ä–∞–≤–∏–ª–∞")],
        [KeyboardButton(text="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")],
        [KeyboardButton(text="–ü–∞—Ä—Ç–Ω–µ—Ä—ã")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", reply_markup=keyboard)

# –ü–æ–¥–º–µ–Ω—é "–û –Ω–∞—Å"
@router.message(lambda message: message.text == "–û –Ω–∞—Å")
async def about_us(message: Message):
    about_text = (
        "RaJah.WS ‚Äî –º—ã –≥—Ä—É–ø–ø–∞ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, –æ—Ç–∫—Ä—ã–≤—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è.\n\n"
        "–°–≤—è—Ç–æ –≤–µ—Ä–∏–º –≤ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—é –∏ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n"
        "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n"
        "- üìö [–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π](https://example.com/knowledge-base)\n"
        "- üèãÔ∏è‚Äç‚ôÄÔ∏è [–í–æ—Ä–∫–∞—É—Ç –∏ –∫—Ä–æ—Å—Å—Ñ–∏—Ç](https://example.com/workout)\n"
        "- üì∞ [–ù–æ–≤–æ—Å—Ç–∏ —Å–ø–æ—Ä—Ç–∞ –∏ –Ω–∞—É–∫–∏](https://example.com/news)"
    )
    await message.answer(about_text, disable_web_page_preview=True)

# –ü–æ–¥–º–µ–Ω—é "–ü—Ä–∞–≤–∏–ª–∞"
@router.message(lambda message: message.text == "–ü—Ä–∞–≤–∏–ª–∞")
async def rules(message: Message):
    rules_text = (
        "–ß–µ—Å—Ç–Ω–æ—Å—Ç—å, –ø–æ—Ä—è–¥–æ—á–Ω–æ—Å—Ç—å, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å, —Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ —Ä–∞–∑–≤–∏—Ç–∏—é –∏ –∑–∞–±–æ—Ç–∞ –æ–± –æ–∫—Ä—É–∂–∞—é—â–µ–º –º–∏—Ä–µ‚Ä¶\n\n"
        "–ö–∞–∂–¥—ã–π —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—Ç, —á—Ç–æ –µ–≥–æ –¥–µ–ª–∞–µ—Ç –≤ –∂–∏–∑–Ω–∏ —Å–∏–ª—å–Ω–µ–π.\n"
        "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—è—Ö —Å—Ç–æ—Ä–æ–Ω: [–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é](https://example.com/rules)"
    )
    await message.answer(rules_text, disable_web_page_preview=True)

# –ü–æ–¥–º–µ–Ω—é "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
@router.message(lambda message: message.text == "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
async def feedback(message: Message):
    feedback_text = (
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º:\n\n"
        "- üìß Email: support@rajah.ws\n"
        "- üìû –¢–µ–ª–µ—Ñ–æ–Ω: +1234567890\n"
        "- üåê [–°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Å–∞–π—Ç](https://example.com/contact)"
    )
    await message.answer(feedback_text, disable_web_page_preview=True)

@router.message(lambda message: message.text == "–ü–∞—Ä—Ç–Ω–µ—Ä—ã")
async def partners_menu(message: Message):
    buttons = [
        [KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö")],
        [KeyboardButton(text="–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@router.message(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞—Ö")
async def partner_info(message: Message):
    partners = get_visible_partners()

    if not partners:
        await message.answer("–ü–æ–∫–∞ —á—Ç–æ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø—É—Å—Ç.")
        return

    response = "–ü–∞—Ä—Ç–Ω—ë—Ä—ã –∫–ª—É–±–∞:\n\n"
    for name, credo, logo_url in partners:
        response += f"üîπ {name}\n"
        response += f"–ö—Ä–µ–¥–æ: {credo}\n"
        if logo_url:
            response += f"–õ–æ–≥–æ—Ç–∏–ø: [–°—Å—ã–ª–∫–∞]({logo_url})\n"
        response += "\n"

    await message.answer(response, disable_web_page_preview=False)

@router.message(lambda message: message.text == "–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º")
async def become_partner(message: Message, state: FSMContext):
    await message.answer(
        "–ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
        "1. –ò–º—è –ø–∞—Ä—Ç–Ω—ë—Ä–∞\n"
        "2. –í–∞—à–µ –∫—Ä–µ–¥–æ\n"
        "3. –°—Å—ã–ª–∫–∞ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n\n"
        "–ö–∞–∂–¥—ã–π –ø—É–Ω–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ."
    )
    await state.set_state(PartnerStates.waiting_partner_info)

@router.message(StateFilter(PartnerStates.waiting_partner_info))
async def process_partner_info(message: Message, state: FSMContext):
    data = message.text.split("\n")
    if len(data) < 2:
        await message.answer("–û—à–∏–±–∫–∞: —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –∏–º—è –∏ –∫—Ä–µ–¥–æ.")
        return

    name = data[0].strip()
    credo = data[1].strip()
    logo_url = data[2].strip() if len(data) > 2 else None

    add_partner(name, credo, logo_url)
    await state.clear()

    await message.answer("–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤!")

@router.message(lambda message: message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message):
    buttons = [
        [KeyboardButton(text="–ü—Ä–æ–¥—É–∫—Ç—ã")],
        [KeyboardButton(text="–î–ª—è –¥—Ä—É–∑–µ–π")],
        [KeyboardButton(text="–ë–∞–ª–∞–Ω—Å")],
        [KeyboardButton(text="–ü–∞—Ä—Ç–Ω–µ—Ä—ã")],
        [KeyboardButton(text="–ò–Ω—Ñ–æ")],
    ]
    menu_markup = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=menu_markup)
